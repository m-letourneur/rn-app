import React, { 
  useCallback, 
  useState,
  useEffect
 } from "react";
import { Alert, Button, Linking, StyleSheet, View, Text, Image, ImageBackground} from "react-native";

import CameraApp from './apps/CameraManager/index'
import firestore from '@react-native-firebase/firestore';
import auth from '@react-native-firebase/auth';

import GoogleSignInButton from './apps/AuthenticationManager/index'
// const supportedURL = "https://galerapagos-f5bd9.web.app/";
// 
// const OpenURLButton = ({ url, children }) => {
//   const handlePress = useCallback(async () => {
//     // Checking if the link is supported for links with custom URL scheme.
//     const supported = await Linking.canOpenURL(url);
// 
//     if (supported) {
//       // Opening the link with some app, if the URL scheme is "http" the web link should be opened
//       // by some browser in the mobile
//       await Linking.openURL(url);
//     } else {
//       Alert.alert(`Don't know how to open this URL: ${url}`);
//     }
//   }, [url]);
// 
//   return <Button title={children} onPress={handlePress} />;
// };

// const clickDataId = "clicksub-1";
// 
// const IncrCounterButton = ({ children }) => {
//   const [counter, setCounter] = useState(0);
// 
//   const push = async () => {
//     firestore()
//       .collection('click-data')
//       .doc(clickDataId)
//       .set({
//         id: clickDataId,
//         name: 'Ada Lovelace',
//         age: 30,
//         counter: counter + 1,
//         timestamp: firestore.FieldValue.serverTimestamp(),
//       })
//       .then(() => {
//         console.log('Click data added!');
//         setCounter(counter + 1);
//       });
//   }
// 
//   const handleClickButton = async () => {
//     const s = await push();
//   }
//   return (
//     <View style={styles.center}>
//       <Button title={children} onPress={handleClickButton} />
//       <Text style={{fontSize: 12, color: 'lightgreen', fontWeight: "bold"}}>Counter: {counter}</Text>
//     </View> 
//   );
// };
// 
// function ClickData({ docId }) {
// 
//   const [clickData, setClickData] = useState({
//     id: "clicksub",
//     name: 'Ada Lovelace',
//     age: 30,
//     counter: 1,
//   });
// 
//   useEffect(() => {
//     const subscriber = firestore()
//       .collection('click-data')
//       .doc(docId)
//       .onSnapshot(documentSnapshot => {
//         console.log('Click data: ', documentSnapshot.data());
//         setClickData(documentSnapshot.data())
//       });
// 
//     // Stop listening for updates when no longer required
//     return () => subscriber();
//   }, [docId]);
// 
// 
//   return (
//     <View style={styles.center}>
//       <Text style={{fontSize: 22, color: 'blue', fontWeight: "bold"}}>Collected data for {docId}: c = {clickData ? clickData.counter : -1}</Text>
//     </View> 
//   );
// 
// }
// 
// function DisplayLastPicData({currentUri}) {
// 
//   const picId = 'myfirstpic'
// 
//   const [picData, setPicData] = useState();
// 
//   useEffect(() => {
//     const subscriber = firestore()
//       .collection('pic')
//       .doc(picId)
//       .onSnapshot(documentSnapshot => {
//         console.log('Click data: ', documentSnapshot.data());
//         setPicData(documentSnapshot.data())
//       });
// 
//     // Stop listening for updates when no longer required
//     return () => subscriber();
//   }, []);
// 
//   const encodedData = picData ? picData.dataBase64: null;
//   const timestamp = picData ? picData.timestamp: null;
//   return (
//     <View style={styles.center}>
//       {
//         timestamp 
//         ? <Text style={{fontSize: 10, color: 'blue', fontWeight: "bold"}}>Your last picture take at : {timestamp.toString()}</Text>
//         : <Text>""</Text>
//       }
//       {
//         currentUri
//         ? <Image source={{uri: currentUri, isStatic:true}} style={{width: 300, height: 400}} />
//         : <Text></Text>
//       }
//     </View> 
//   );
// 
// } 

const ProtectedApp = () => {
  // Set an initializing state whilst Firebase connects
  const [initializing, setInitializing] = useState(true);
  const [user, setUser] = useState();

  // Handle user state changes
  function onAuthStateChanged(user) {
    setUser(user);
    if (initializing) setInitializing(false);
  }

  useEffect(() => {
    const subscriber = auth().onAuthStateChanged(onAuthStateChanged);
    return subscriber; // unsubscribe on unmount
  }, []);

  const styles = StyleSheet.create({
    center: {
      flex: 1,
      justifyContent: "center",
      alignItems: 'center'
    }
  });
  
  if (initializing) return null;

  if (!user) {
    return (
      <View style={styles.center}>
        <Text>Hello dude, please Login</Text>
        <GoogleSignInButton />
      </View>
    );
  }

  return (
    <View style={styles.center}>
      <Text>Welcome aboard {user.email}</Text>
    </View>
  );

}


const App = () => {
  return <ProtectedApp />
};

export default App;

